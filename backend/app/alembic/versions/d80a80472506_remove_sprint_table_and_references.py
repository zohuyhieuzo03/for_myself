"""remove_sprint_table_and_references

Revision ID: d80a80472506
Revises: 63d62c50b0a0
Create Date: 2025-09-19 12:09:43.895706

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd80a80472506'
down_revision = '63d62c50b0a0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints first
    op.drop_constraint(op.f('allocationrule_sprint_id_fkey'), 'allocationrule', type_='foreignkey')
    op.drop_constraint(op.f('income_sprint_id_fkey'), 'income', type_='foreignkey')
    op.drop_constraint(op.f('transaction_sprint_id_fkey'), 'transaction', type_='foreignkey')
    
    # Drop columns
    op.drop_column('allocationrule', 'sprint_id')
    op.drop_column('income', 'sprint_id')
    op.drop_column('transaction', 'sprint_id')
    
    # Finally drop the sprint table
    op.drop_table('sprint')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transaction', sa.Column('sprint_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('transaction_sprint_id_fkey'), 'transaction', 'sprint', ['sprint_id'], ['id'])
    op.add_column('income', sa.Column('sprint_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('income_sprint_id_fkey'), 'income', 'sprint', ['sprint_id'], ['id'])
    op.add_column('allocationrule', sa.Column('sprint_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('allocationrule_sprint_id_fkey'), 'allocationrule', 'sprint', ['sprint_id'], ['id'])
    op.create_table('sprint',
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('payday_anchor', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('is_closed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('sprint_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('sprint_pkey'))
    )
    # ### end Alembic commands ###
