"""add_todo_status_enum

Revision ID: a97b91d31d5a
Revises: be5dd2e58c66
Create Date: 2025-09-22 00:49:40.352625

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'a97b91d31d5a'
down_revision = 'be5dd2e58c66'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum type first
    todo_status_enum = sa.Enum('backlog', 'todo', 'planning', 'done', 'archived', name='todostatus')
    todo_status_enum.create(op.get_bind())
    
    # Add the status column as nullable
    op.add_column('todo', sa.Column('status', todo_status_enum, nullable=True))
    
    # Migrate existing data: is_completed=True -> status='done', is_completed=False -> status='todo'
    op.execute("UPDATE todo SET status = CASE WHEN is_completed = true THEN 'done'::todostatus ELSE 'todo'::todostatus END")
    
    # Now make the status column NOT NULL
    op.alter_column('todo', 'status', nullable=False)
    
    # Drop the old is_completed column
    op.drop_column('todo', 'is_completed')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add back the is_completed column as nullable
    op.add_column('todo', sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True))
    
    # Migrate data back: status='done' -> is_completed=True, others -> is_completed=False
    op.execute("UPDATE todo SET is_completed = CASE WHEN status = 'done' THEN true ELSE false END")
    
    # Make is_completed NOT NULL
    op.alter_column('todo', 'is_completed', nullable=False)
    
    # Drop the status column
    op.drop_column('todo', 'status')
    
    # Drop the enum type
    todo_status_enum = sa.Enum('backlog', 'todo', 'planning', 'done', 'archived', name='todostatus')
    todo_status_enum.drop(op.get_bind())
    # ### end Alembic commands ###
